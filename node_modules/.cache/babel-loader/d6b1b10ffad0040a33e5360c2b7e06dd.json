{"ast":null,"code":"var _jsxFileName = \"/Users/katiemoss/Documents/She_Codes/VS-Codes/SheCodes_CrowdMentor/src/pages/ProjectPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProjectPage() {\n  _s();\n\n  const history = useHistory();\n  const [projectData, setProjectData] = useState({\n    pledges: []\n  });\n  const {\n    id: project_id\n  } = useParams();\n  const [isEditing, setIsEditing] = useState(false);\n  const token = window.localStorage.getItem(\"token\");\n  const [userToken, setuserToken] = useState(token);\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_URL}projects/${project_id}`).then(results => {\n      return results.json();\n    }).then(data => {\n      setProjectData(data);\n    });\n  }, [project_id]);\n\n  const deleteProject = async () => {\n    await fetch(`${process.env.REACT_APP_API_URL}projects/${project_id}`, {\n      method: \"delete\",\n      headers: {\n        \"Authorization\": `Token ${localStorage.getItem('token')}`\n      }\n    });\n    history.push('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [localStorage.getItem('token') && /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"deletebutton\",\n      onClick: deleteProject,\n      children: \"Delete Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"pageframe\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: projectData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Created at: \", projectData.date_created]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: `Status: ${projectData.is_open}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Pledges:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: projectData.pledges.map((pledgeData, key) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [pledgeData.amount, \" from \", pledgeData.supporter]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), userToken ? /*#__PURE__*/_jsxDEV(Link, {\n        className: \"buttonlink\",\n        to: `/createpledge/${project_id}`,\n        children: \"Pledge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(Link, {\n        className: \"buttonlink\",\n        to: \"/login\",\n        children: \"Log in to Pledge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProjectPage, \"0eIWi2HRergs+MfXgMCtsAom498=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = ProjectPage;\nexport default ProjectPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectPage\");","map":{"version":3,"sources":["/Users/katiemoss/Documents/She_Codes/VS-Codes/SheCodes_CrowdMentor/src/pages/ProjectPage.jsx"],"names":["React","useState","useEffect","useParams","useHistory","Link","ProjectPage","history","projectData","setProjectData","pledges","id","project_id","isEditing","setIsEditing","token","window","localStorage","getItem","userToken","setuserToken","fetch","process","env","REACT_APP_API_URL","then","results","json","data","deleteProject","method","headers","push","title","date_created","is_open","map","pledgeData","key","amount","supporter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AAEA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC;AAAES,IAAAA,OAAO,EAAE;AAAX,GAAD,CAA9C;AAEA,QAAM;AAAEC,IAAAA,EAAE,EAAEC;AAAN,MAAqBT,SAAS,EAApC;AAEA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMc,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAACc,KAAD,CAA1C;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,YAAWZ,UAAW,EAAxD,CAAL,CACCa,IADD,CACOC,OAAD,IAAa;AACnB,aAAOA,OAAO,CAACC,IAAR,EAAP;AACC,KAHD,EAICF,IAJD,CAIOG,IAAD,IAAU;AAChBnB,MAAAA,cAAc,CAACmB,IAAD,CAAd;AACC,KAND;AAOH,GARQ,EAQN,CAAEhB,UAAF,CARM,CAAT;;AAUA,QAAMiB,aAAa,GAAG,YAAY;AAC9B,UAAMR,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,YAAWZ,UAAW,EAAxD,EAA2D;AAClEkB,MAAAA,MAAM,EAAE,QAD0D;AAElEC,MAAAA,OAAO,EAAE;AACL,yBAAkB,SAAQd,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADnD;AAFyD,KAA3D,CAAX;AAMAX,IAAAA,OAAO,CAACyB,IAAR,CAAa,GAAb;AACH,GARD;;AAUA,sBACI;AAAA,eACEf,YAAY,CAACC,OAAb,CAAqB,OAArB,kBACK;AAAQ,MAAA,EAAE,EAAC,cAAX;AAA0B,MAAA,OAAO,EAAEW,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFP,eAII;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,8BACI;AAAA,kBAAKrB,WAAW,CAACyB;AAAjB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,mCAAiBzB,WAAW,CAAC0B,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAM,WAAU1B,WAAW,CAAC2B,OAAQ;AAApC;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,kBACC3B,WAAW,CAACE,OAAZ,CAAoB0B,GAApB,CAAwB,CAACC,UAAD,EAAaC,GAAb,KAAqB;AAC1C,8BACA;AAAA,uBACCD,UAAU,CAACE,MADZ,YAC0BF,UAAU,CAACG,SADrC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA;AAKH,SANA;AADD;AAAA;AAAA;AAAA;AAAA,cALJ,EAcKrB,SAAS,gBACJ,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,YAAhB;AAA6B,QAAA,EAAE,EAAG,iBAAgBP,UAAW,EAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADI,gBAEJ,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,YAAhB;AAA6B,QAAA,EAAE,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBV;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GA3DQN,W;UACWF,U,EAIWD,S;;;KALtBG,W;AA6DT,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nfunction ProjectPage() {\n    const history = useHistory()\n\n    const [projectData, setProjectData] = useState({ pledges: [] });\n\n    const { id: project_id } = useParams();\n\n    const [isEditing, setIsEditing] = useState(false);\n\n    const token = window.localStorage.getItem(\"token\")\n    \n    const [userToken, setuserToken] = useState(token)\n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_URL}projects/${project_id}`)\n        .then((results) => {\n        return results.json();\n        })\n        .then((data) => {\n        setProjectData(data);\n        });\n    }, [ project_id ]);\n\n    const deleteProject = async () => {\n        await fetch(`${process.env.REACT_APP_API_URL}projects/${project_id}`, {\n            method: \"delete\",\n            headers: {\n                \"Authorization\": `Token ${localStorage.getItem('token')}`\n            }\n        })\n        history.push('/')\n    }\n\n    return (\n        <div>\n        { localStorage.getItem('token')\n            && <button id=\"deletebutton\" onClick={deleteProject}>Delete Project</button>\n        }\n            <div id=\"pageframe\">\n                <h2>{projectData.title}</h2>\n                <h3>Created at: {projectData.date_created}</h3>\n                <h3>{`Status: ${projectData.is_open}`}</h3>\n                <h3>Pledges:</h3>\n                <ul>\n                {projectData.pledges.map((pledgeData, key) => {\n                    return (\n                    <li>\n                    {pledgeData.amount} from {pledgeData.supporter}\n                    </li>\n                    );\n                })}\n                </ul>   \n                {userToken \n                    ? <Link className=\"buttonlink\" to={`/createpledge/${project_id}`}>Pledge</Link>\n                    : <Link className=\"buttonlink\" to=\"/login\">Log in to Pledge</Link>\n                }                     \n            </div>\n        </div>\n    );\n}\n\nexport default ProjectPage;"]},"metadata":{},"sourceType":"module"}