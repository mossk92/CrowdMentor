{"ast":null,"code":"var _jsxFileName = \"/Users/katiemoss/Documents/She_Codes/VS-Codes/SheCodes_CrowdMentor/src/components/CreatePledge/CreatePledge.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreatePledge() {\n  _s();\n\n  const history = useHistory();\n  const [pledgeinfo, setpledgeinfo] = useState({\n    amount: \"\",\n    comment: \"\",\n    project_id: \"\"\n  });\n\n  const handleChange = event => {\n    const {\n      id,\n      value\n    } = event.target;\n    setpledgeinfo(prevPledge => {\n      return { ...prevPledge,\n        [id]: value\n      };\n    });\n  };\n\n  const postData = async () => {\n    const token = window.localStorage.getItem('token');\n    console.log(\"What is token: \", token);\n    const response = await fetch(`${process.env.REACT_APP_API_URL}pledges/`, {\n      method: 'post',\n      headers: {\n        \"Authorization\": `Token ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(pledgeinfo)\n    });\n    return response.json();\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (window.localStorage.getItem(\"token\")) {\n      postData().then(response => {\n        console.log(\"response form our API ----------\", response);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"project_id\",\n        children: \"Project ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"project_id\",\n        placeholder: \"Project ID\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Pledge:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"amount\",\n        placeholder: \"Hours\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: \"Comment:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"comment\",\n        placeholder: \"Add a pep talk!\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit Pledge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreatePledge, \"Zui7SpcaiWBiNx287o1CoV/g5Wc=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreatePledge;\nexport default CreatePledge;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePledge\");","map":{"version":3,"sources":["/Users/katiemoss/Documents/She_Codes/VS-Codes/SheCodes_CrowdMentor/src/components/CreatePledge/CreatePledge.jsx"],"names":["React","useState","useHistory","useParams","CreatePledge","history","pledgeinfo","setpledgeinfo","amount","comment","project_id","handleChange","event","id","value","target","prevPledge","postData","token","window","localStorage","getItem","console","log","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","json","handleSubmit","e","preventDefault","then"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nfunction CreatePledge() {\n\n  const history = useHistory();  \n  const [pledgeinfo, setpledgeinfo] = useState({\n    amount: \"\",\n    comment: \"\",\n    project_id: \"\",\n  });\n\n  const handleChange = (event) => {\n    const { id, value } = event.target;\n    setpledgeinfo((prevPledge) => {\n      return {\n        ...prevPledge,\n        [id]: value,\n      };\n    });\n  };\n\n  const postData = async () => {\n    const token = window.localStorage.getItem('token');\n    console.log(\"What is token: \", token)\n    const response = await fetch(`${process.env.REACT_APP_API_URL}pledges/`, {\n      method: 'post',\n      headers: {\n        \"Authorization\": `Token ${token}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(pledgeinfo),\n    });\n    return response.json();\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (window.localStorage.getItem(\"token\")) {\n      postData().then((response) => {\n        console.log(\"response form our API ----------\", response)\n      });\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"project_id\">Project ID:</label>\n        <input\n          type=\"number\"\n          id=\"project_id\"\n          placeholder=\"Project ID\"\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"amount\">Pledge:</label>\n        <input\n          type=\"number\"\n          id=\"amount\"\n          placeholder=\"Hours\"\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"comment\">Comment:</label>\n        <input\n          type=\"text\"\n          id=\"comment\"\n          placeholder=\"Add a pep talk!\"\n          onChange={handleChange}\n        />\n      </div>\n        <button type=\"submit\" >Submit Pledge</button>\n      </form>\n    );\n  }\n\nexport default CreatePledge;"]},"metadata":{},"sourceType":"module"}